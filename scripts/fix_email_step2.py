import re
new_function = '\n    def find_latest_data_file(self, target_date=None):\n        """\n        指定された日付のデータファイルを検索し、ない場合は最新のファイルを返す\n\n        Args:\n            target_date: 検索する日付（YYYYMMDD形式、Noneの場合は前日）\n\n        Returns:\n            ファイルパスと日付\n        """\n        data_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), "data")\n        if not os.path.exists(data_dir):\n            self.logger.error(f"データディレクトリが存在しません: {data_dir}")\n            return None, None\n\n        # 対象日付の設定（指定がなければ前日）\n        if target_date is None:\n            yesterday = datetime.now() - timedelta(days=1)\n            target_date = yesterday.strftime("%Y%m%d")\n\n        # 指定日のファイル検索\n        target_file = os.path.join(data_dir, f"data_{target_date}.json")\n        if os.path.exists(target_file):\n            return target_file, target_date\n\n        # 指定日のファイルがない場合、全データファイルをリストアップ\n        self.logger.warning(f"日付 {target_date} のデータファイルが見つかりません: {target_file}")\n\n        data_files = []\n        for file in os.listdir(data_dir):\n            if file.startswith("data_") and file.endswith(".json"):\n                try:\n                    date_str = file[5:-5]  # "data_YYYYMMDD.json" から日付部分を抽出\n                    # 日付形式が有効かチェック\n                    datetime.strptime(date_str, "%Y%m%d")\n                    data_files.append((file, date_str))\n                except ValueError:\n                    # 日付形式が無効な場合はスキップ\n                    continue\n\n        if not data_files:\n            self.logger.error("利用可能なデータファイルがありません")\n            return None, None\n\n        # 日付でソートして最新のものを取得\n        data_files.sort(key=lambda x: x[1], reverse=True)\n        latest_file = os.path.join(data_dir, data_files[0][0])\n        latest_date = data_files[0][1]\n\n        self.logger.warning(f"最新の利用可能なデータを使用します: {latest_date}")\n        return latest_file, latest_date\n'
with open('email_notifier.py', 'r') as f:
    content = f.read()
class_pattern = 'class EmailNotifier:'
modified_content = re.sub(class_pattern, f'class EmailNotifier:{new_function}', content)
with open('email_notifier.py', 'w') as f:
    f.write(modified_content)
print('データファイル検索関数を追加しました')