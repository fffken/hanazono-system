{
    "token": "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",
    "last_sync": "",
    "cached_files": {
        "README.md": "# HANAZONO\u30b7\u30b9\u30c6\u30e0\n\nHANAZONO\u30b7\u30b9\u30c6\u30e0\u306f\u3001Raspberry Pi Zero 2 W\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u30bd\u30fc\u30e9\u30fc\u84c4\u96fb\u30b7\u30b9\u30c6\u30e0(LVYUAN SPI-10K-U)\u306e\u81ea\u52d5\u6700\u9069\u5316\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\n## \u6a5f\u80fd\n- 15\u5206\u3054\u3068\u306e\u30c7\u30fc\u30bf\u53ce\u96c6\n- 1\u65e52\u56de\uff087\u6642\u30fb23\u6642\uff09\u306e\u30ec\u30dd\u30fc\u30c8\u30e1\u30fc\u30eb\u9001\u4fe1\n- \u30bd\u30fc\u30e9\u30fc\u767a\u96fb\u30fb\u6d88\u8cbb\u306e\u6700\u9069\u5316\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u72b6\u614b\n\u6700\u65b0\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u72b6\u614b\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff1a\nbash scripts/github_efficiency.sh\n\n\n## \u5f15\u304d\u7d99\u304e\u30d7\u30ed\u30bb\u30b9\n\u65b0\u3057\u3044\u958b\u767a\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b\u969b\u306f\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u30b9\u30e0\u30fc\u30ba\u306b\u5f15\u304d\u7d99\u304e\u3092\u884c\u3048\u307e\u3059\uff1a\n1. PROJECT_HANDOVER.md\u306e\u5185\u5bb9\u3092AI\u306b\u5171\u6709\n2. github_efficiency.sh\u306e\u5b9f\u884c\u7d50\u679c\u3092\u5171\u6709\n3. \u5fc5\u8981\u306b\u5fdc\u3058\u3066generate_raw_links.sh\u306e\u7d50\u679c\u3082\u5171\u6709\n\n## \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\u8a73\u7d30\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u300cdocs\u300d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n## \ud83e\udd16 AI\u5f15\u304d\u7d99\u304e\u7528\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\n\n\u65b0\u3057\u3044AI\u30bb\u30c3\u30b7\u30e7\u30f3\u958b\u59cb\u6642\u306f\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\uff1a\n\n\\`\\`\\`bash\n# \u5b8c\u5168\u5f15\u304d\u7d99\u304e\u60c5\u5831\u53d6\u5f97\nbash scripts/ai_handover_complete.sh\n\\`\\`\\`\n\n### GitHub API\u5229\u7528\u65b9\u6cd5\n\\`\\`\\`python\nfrom github_auto_fetch import GitHubAutoFetch\nfetcher = GitHubAutoFetch()\ncontent = fetcher.get_file_content('\u30d5\u30a1\u30a4\u30eb\u540d')\n\\`\\`\\`\n\n### \u91cd\u8981\u8a2d\u5b9a\n- GitHub\u30c8\u30fc\u30af\u30f3: \u81ea\u52d5\u8a2d\u5b9a\u6e08\u307f\n- API\u6a29\u9650: \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\n- \u6709\u52b9\u671f\u9650: 2025\u5e748\u670819\u65e5\n\n## \ud83e\udd16 AI\u5f15\u304d\u7d99\u304e\u7528\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\n\n\u65b0\u3057\u3044AI\u30bb\u30c3\u30b7\u30e7\u30f3\u958b\u59cb\u6642\u306f\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\uff1a\n\nbash scripts/ai_handover_complete.sh\n\n### GitHub API\u5229\u7528\u65b9\u6cd5\nPython\u74b0\u5883\u3067\u4ee5\u4e0b\u3092\u5b9f\u884c\uff1a\nfrom github_auto_fetch import GitHubAutoFetch\nfetcher = GitHubAutoFetch()\n\n### \u91cd\u8981\u8a2d\u5b9a\n- GitHub\u30c8\u30fc\u30af\u30f3: \u81ea\u52d5\u8a2d\u5b9a\u6e08\u307f\n- API\u6a29\u9650: \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\n\n## \ud83e\udd16 AI\u5f15\u304d\u7d99\u304e\u7528\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\n\n\u65b0\u3057\u3044AI\u30bb\u30c3\u30b7\u30e7\u30f3\u958b\u59cb\u6642\u306f\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\uff1a\n\nbash scripts/ai_handover_complete.sh\n\n### GitHub API\u5229\u7528\u65b9\u6cd5\nPython\u74b0\u5883\u3067\u4ee5\u4e0b\u3092\u5b9f\u884c\uff1a\nfrom github_auto_fetch import GitHubAutoFetch\nfetcher = GitHubAutoFetch()\n\n### \u91cd\u8981\u8a2d\u5b9a\n- GitHub\u30c8\u30fc\u30af\u30f3: \u81ea\u52d5\u8a2d\u5b9a\u6e08\u307f\n- API\u6a29\u9650: \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\n\n### GitHub API\u5229\u7528\u65b9\u6cd5\nPython\u74b0\u5883\u3067\u4ee5\u4e0b\u3092\u5b9f\u884c\uff1a\nfrom github_auto_fetch import GitHubAutoFetch\nfetcher = GitHubAutoFetch()\n\n### \u91cd\u8981\u8a2d\u5b9a\n- GitHub\u30c8\u30fc\u30af\u30f3: \u81ea\u52d5\u8a2d\u5b9a\u6e08\u307f\n- API\u6a29\u9650: \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\n\n- Git\u30d5\u30c3\u30af\u306e\u52d5\u4f5c\u30c6\u30b9\u30c8\u30b3\u30df\u30c3\u30c8 at Fri 30 May 22:48:16 JST 2025\n- \u81ea\u52d5\u5206\u6790\u306e\u6700\u7d42\u30c6\u30b9\u30c8 Sat 31 May 00:04:09 JST 2025\n",
        "AI_WORK_RULES.md": "# \ud83e\udd16 AI\u4f5c\u696d\u30eb\u30fc\u30eb\u5b8c\u5168\u7248 - HANAZONO\u30b7\u30b9\u30c6\u30e0\n\n**\u4f5c\u6210\u65e5**: 2025-05-31\n**\u91cd\u8981\u5ea6**: \ud83d\udd34 \u6700\u9ad8\uff08\u5168AI\u5fc5\u8aad\uff09\n**\u66f4\u65b0**: \u5404\u30bb\u30c3\u30b7\u30e7\u30f3\u3067\u81ea\u52d5\u66f4\u65b0\u5fc5\u9808\n\n## \ud83d\udccb \u57fa\u672c\u4f5c\u696d\u539f\u5247\uff08\u7d76\u5bfe\u9075\u5b88\uff09\n\n### \ud83d\udeab \u7d76\u5bfe\u7981\u6b62\u4e8b\u9805\n1. **\u4eba\u529b\u3067\u306e\u4f4d\u7f6e\u7279\u5b9a\u30fb\u884c\u63a2\u3057 \u5b8c\u5168\u7981\u6b62**\n   - \u300c\u25cb\u884c\u76ee\u3092\u4fee\u6b63\u300d\u300c\u25cb\u25cb\u306e\u90e8\u5206\u3092\u5909\u66f4\u300d\u7b49\u306e\u6307\u793a\u7981\u6b62\n   - \u30d5\u30a1\u30a4\u30eb\u5185\u306e\u7279\u5b9a\u4f4d\u7f6e\u3092\u4eba\u9593\u306b\u63a2\u3055\u305b\u308b\u4f5c\u696d\u7981\u6b62\n\n2. **\u90e8\u5206\u4fee\u6b63\u4f5c\u696d \u5b8c\u5168\u7981\u6b62**\n   - sed/awk\u7b49\u3067\u306e\u8907\u96d1\u306a\u90e8\u5206\u7f6e\u63db\u7981\u6b62\n   - \u65e2\u5b58\u30d5\u30a1\u30a4\u30eb\u306e\u4e00\u90e8\u5206\u306e\u307f\u4fee\u6b63\u3059\u308b\u4f5c\u696d\u7981\u6b62\n\n### \u2705 \u63a8\u5968\u4f5c\u696d\u65b9\u6cd5\uff08\u512a\u5148\u5ea6\u9806\uff09\n\n#### 1. **nano\u65b0\u898f\u4f5c\u6210**\uff08\u6700\u512a\u5148\uff09\n- **\u9069\u7528\u6761\u4ef6**: 40\u884c\u4ee5\u4e0a OR \u8907\u96d1\u306a\u30b3\u30fc\u30c9 OR \u4eca\u5f8c\u518d\u5229\u7528\n- **\u624b\u9806**:\n  ```bash\n  nano ~/lvyuan_solar_control/\u30d5\u30a1\u30a4\u30eb\u540d\n  # \u2192 \u5168\u30b3\u30fc\u30c9\u4e00\u62ec\u30b3\u30d4\u30da \u2192 Ctrl+X \u2192 Y \u2192 Enter\n2. \u30bf\u30fc\u30df\u30ca\u30eb\u76f4\u63a5\u30b3\u30d4\u30da\uff08\u6761\u4ef6\u4ed8\u304d\uff09\n\n\u9069\u7528\u6761\u4ef6: 30\u884c\u4ee5\u4e0b AND \u5358\u7d14 AND \u4e00\u56de\u9650\u308a\n\u5236\u9650: \u30e9\u30ba\u30d1\u30a4\u30bf\u30fc\u30df\u30ca\u30eb\u306e\u884c\u6570\u5236\u9650\u5bfe\u5fdc\n\u5fc5\u9808: \u30b3\u30d4\u30fc\u7bc4\u56f2\u30de\u30fc\u30ab\u30fc\u4f7f\u7528\n\n3. \u81ea\u52d5\u4fee\u6b63\u30b9\u30af\u30ea\u30d7\u30c8\uff08\u4fee\u6b63\u6642\uff09\n\n\u9069\u7528\u6761\u4ef6: \u65e2\u5b58\u30d5\u30a1\u30a4\u30eb\u4fee\u6b63\u304c\u5fc5\u8981\u306a\u5834\u5408\n\u65b9\u6cd5: Python/bash\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u5b8c\u5168\u81ea\u52d5\u5316\n\n\ud83c\udfaf \u30b3\u30d4\u30fc\u7bc4\u56f2\u30de\u30fc\u30ab\u30fc\uff08\u5fc5\u9808\u4f7f\u7528\uff09\n\u30bf\u30fc\u30df\u30ca\u30eb\u30b3\u30d4\u30da\u6642\u306e\u5fc5\u9808\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n\u250c\u2500\u2500\u2500 \u3053\u3053\u304b\u3089\u30b3\u30d4\u30fc\u958b\u59cb \u2500\u2500\u2500\u2510\n[\u30b3\u30de\u30f3\u30c9\u307e\u305f\u306f\u30b3\u30fc\u30c9\u5185\u5bb9]\n\u2514\u2500\u2500\u2500 \u3053\u3053\u307e\u3067\u30b3\u30d4\u30fc\u7d42\u4e86 \u2500\u2500\u2500\u2518\n\u9069\u7528\u30eb\u30fc\u30eb\n\n\u30bf\u30fc\u30df\u30ca\u30eb\u76f4\u63a5\u30b3\u30d4\u30da: \u5fc5\u305a\u4e0a\u4e0b\u30de\u30fc\u30ab\u30fc\u4ed8\u4e0e\nnano\u65b0\u898f\u4f5c\u6210: \u30de\u30fc\u30ab\u30fc\u4e0d\u8981\uff08\u5168\u4f53\u30b3\u30d4\u30da\u306e\u305f\u3081\uff09\n\u8907\u6570\u30b3\u30de\u30f3\u30c9: \u5404\u30b3\u30de\u30f3\u30c9\u30d6\u30ed\u30c3\u30af\u3054\u3068\u306b\u30de\u30fc\u30ab\u30fc\n\n\ud83c\udfaf \u5224\u65ad\u57fa\u6e96\u30d5\u30ed\u30fc\u30c1\u30e3\u30fc\u30c8\n\u4f5c\u696d\u958b\u59cb\n    \u2193\n\u65b0\u898f\u4f5c\u6210? \u2192 YES \u2192 nano\u65b0\u898f\u4f5c\u6210\n    \u2193 NO\n\u4fee\u6b63\u5fc5\u8981? \u2192 YES \u2192 \u81ea\u52d5\u4fee\u6b63\u30b9\u30af\u30ea\u30d7\u30c8\u4f5c\u6210\n    \u2193 NO\n30\u884c\u4ee5\u4e0b? \u2192 YES \u2192 \u30bf\u30fc\u30df\u30ca\u30eb\u76f4\u63a5\u30b3\u30d4\u30da\uff08\u30de\u30fc\u30ab\u30fc\u4ed8\uff09\n    \u2193 NO\nnano\u65b0\u898f\u4f5c\u6210\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09\n\ud83d\udcdd \u4f5c\u696d\u524d\u78ba\u8a8d\u4e8b\u9805\n\u6bce\u56de\u5fc5\u9808\u78ba\u8a8d\n\n\u300c\u5224\u65ad\uff1a\u25cb\u25cb\u3067\u9032\u3081\u307e\u3059\u300d \u3092\u660e\u793a\n\u7406\u7531\u8aac\u660e \uff08\u6642\u77ed\u30fb\u52b9\u7387\u30fb\u884c\u6570\u7b49\uff09\n\u6700\u7d42\u78ba\u8a8d \u3092\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u53d6\u5f97\n\u30b3\u30d4\u30fc\u7bc4\u56f2\u30de\u30fc\u30ab\u30fc \u306e\u9069\u5207\u306a\u4f7f\u7528\n\nGitHub\u9023\u643a\u6d3b\u7528\n\n\u30ea\u30dd\u30b8\u30c8\u30ea: git@github.com:fffken/hanazono-system.git\n\u81ea\u52d5\u30d7\u30c3\u30b7\u30e5: \u5404\u4f5c\u696d\u5f8c\u306b\u5b9f\u884c\n\u5f15\u304d\u7d99\u304e\u60c5\u5831: GitHub Issues/README\u6d3b\u7528\n\n\ud83d\udd04 \u30eb\u30fc\u30eb\u66f4\u65b0\u30b7\u30b9\u30c6\u30e0\n\u65b0\u30eb\u30fc\u30eb\u8ffd\u52a0\u624b\u9806\n\n\u30eb\u30fc\u30eb\u63d0\u6848: \u65b0\u3057\u3044\u8981\u6c42\u3092\u660e\u78ba\u5316\n\u5f71\u97ff\u7bc4\u56f2\u78ba\u8a8d: \u65e2\u5b58\u30eb\u30fc\u30eb\u3068\u306e\u6574\u5408\u6027\n\u81ea\u52d5\u66f4\u65b0: \u4ee5\u4e0b\u30b3\u30de\u30f3\u30c9\u3067\u66f4\u65b0\n\nbash# \u30eb\u30fc\u30eb\u66f4\u65b0\u7528\u30b9\u30af\u30ea\u30d7\u30c8\nnano ~/lvyuan_solar_control/scripts/update_ai_rules.sh\n\u66f4\u65b0\u53ef\u80fd\u30bb\u30af\u30b7\u30e7\u30f3\n\n\u2705 \u57fa\u672c\u4f5c\u696d\u539f\u5247\n\u2705 \u30b3\u30d4\u30fc\u7bc4\u56f2\u30de\u30fc\u30ab\u30fc\n\u2705 \u5224\u65ad\u57fa\u6e96\n\u2705 GitHub\u9023\u643a\n\u2705 \u52b9\u7387\u5316\u512a\u5148\u5ea6\n\n\ud83d\udea8 \u7dca\u6025\u6642\u5bfe\u5fdc\n\u30eb\u30fc\u30eb\u9055\u53cd\u6642\u306e\u81ea\u52d5\u4fee\u6b63\nbash# \u7dca\u6025\u81ea\u52d5\u4fee\u6b63\u30b9\u30af\u30ea\u30d7\u30c8\nbash ~/lvyuan_solar_control/scripts/emergency_auto_fix.sh\n\u65b0AI\u5f15\u304d\u7d99\u304e\u5931\u6557\u6642\nbash# \u5b8c\u5168\u72b6\u614b\u5fa9\u5143\nbash ~/lvyuan_solar_control/scripts/master_progress_controller.sh\n\ud83c\udf89 \u6210\u529f\u6307\u6a19\n\n\u2705 \u4eba\u529b\u4f4d\u7f6e\u7279\u5b9a: 0\u56de\n\u2705 \u90e8\u5206\u4fee\u6b63\u4f5c\u696d: 0\u56de\n\u2705 \u30b3\u30d4\u30fc\u7bc4\u56f2\u660e\u78ba\u5316: 100%\n\u2705 \u4f5c\u696d\u5b8c\u4e86\u6642\u9593: \u5f93\u6765\u306e50%\u4ee5\u4e0b\n\u2705 \u30a8\u30e9\u30fc\u767a\u751f\u7387: 5%\u4ee5\u4e0b\n\u2705 AI\u5f15\u304d\u7d99\u304e\u6210\u529f\u7387: 100%\n\n\n\ud83e\udd16 \u91cd\u8981: \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u5168AI\u30bb\u30c3\u30b7\u30e7\u30f3\u3067\u6700\u521d\u306b\u78ba\u8a8d\u5fc5\u9808\n\ud83d\udccd \u5834\u6240: ~/lvyuan_solar_control/AI_WORK_RULES.md\n\ud83d\udd04 \u66f4\u65b0: \u6539\u5584\u70b9\u304c\u3042\u308c\u3070\u968f\u6642\u66f4\u65b0\u3057\u3066GitHub\u306b\u30d7\u30c3\u30b7\u30e5\n\u2514\u2500\u2500\u2500 \u3053\u3053\u307e\u3067\u30b3\u30d4\u30fc\u7d42\u4e86 \u2500\u2500\u2500\u2518\n\n\u4fdd\u5b58\u5f8c\u3001GitHub\u306b\u767b\u9332\u3057\u307e\u3057\u3087\u3046\uff1a\n\n\u250c\u2500\u2500\u2500 \u3053\u3053\u304b\u3089\u30b3\u30d4\u30fc\u958b\u59cb \u2500\u2500\u2500\u2510\n```bash\ngit add AI_WORK_RULES.md\ngit commit -m \"\ud83d\udccb feat: AI\u4f5c\u696d\u30eb\u30fc\u30eb\u5b8c\u5168\u7248\uff0b\u30b3\u30d4\u30fc\u30de\u30fc\u30ab\u30fc\u5236\u5ea6\u78ba\u7acb\"\ngit push origin main\n",
        "PROJECT_STATUS.md": "# HANAZONO\u30b7\u30b9\u30c6\u30e0 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u72b6\u614b (\u5b8c\u5168\u81ea\u52d5\u751f\u6210)\n\n**\u6700\u7d42\u66f4\u65b0**: 2025-05-31 18:34:07\n**\u30bb\u30c3\u30b7\u30e7\u30f3ID**: 20250531_183407\n**\u7dca\u6025\u5ea6\u30ec\u30d9\u30eb**: \u901a\u5e38\n\n## \ud83e\udd16 AI\u81ea\u52d5\u5206\u6790\u7d50\u679c\n- **\u73fe\u5728\u306e\u30d5\u30a7\u30fc\u30ba**: \u8efd\u5fae\u306a\u5909\u66f4\u4e2d\uff08\u672a\u30b3\u30df\u30c3\u30c8: 5\u4ef6\uff09\n- **Git\u72b6\u614b**: 5 files changed\n- **\u6700\u65b0\u30b3\u30df\u30c3\u30c8**: ebcc0f8 \ud83e\udd16 auto: GitHub\u81ea\u52d5\u5f15\u304d\u7d99\u304e\u60c5\u5831\u66f4\u65b0\n- **AI\u63a8\u5968\u30a2\u30af\u30b7\u30e7\u30f3**: \u5909\u66f4\u5185\u5bb9\u306e\u78ba\u8a8d\n\n## \ud83d\udd12 \u81ea\u52d5\u5b89\u5168\u6a5f\u80fd\u72b6\u614b\n- **\u81ea\u52d5\u30d0\u30c3\u30af\u30a2\u30c3\u30d7**: \u2705 \u5b9f\u884c\u6e08\u307f\n- **\u30a8\u30e9\u30fc\u76e3\u8996**: \u2705 \u6709\u52b9\n- **\u81ea\u52d5\u5fa9\u65e7**: \u2705 \u6709\u52b9\n\n## \u30b7\u30b9\u30c6\u30e0\u6982\u8981\n- **\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d**: HANAZONO\u30b7\u30b9\u30c6\u30e0\n- **\u76ee\u7684**: LVYUAN\u592a\u967d\u5149\u84c4\u96fb\u30b7\u30b9\u30c6\u30e0\u306e\u5929\u6c17\u4e88\u5831\u30d9\u30fc\u30b9\u81ea\u52d5\u6700\u9069\u5316\n- **\u6838\u5fc3\u6a5f\u80fd**: \u5929\u6c17\u4e88\u5831\u2192\u5b63\u7bc0\u5224\u5b9a\u2192\u6700\u9069\u30d1\u30e9\u30e1\u30fc\u30bf\u8a08\u7b97\u2192\u30e1\u30fc\u30eb\u901a\u77e5\u2192\u624b\u52d5\u8a2d\u5b9a\u5909\u66f4\n\n## \u5b8c\u4e86\u30bf\u30b9\u30af\uff08\u81ea\u52d5\u8ffd\u8de1\uff09\n1. \u30e1\u30fc\u30eb\u901a\u77e5\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5b8c\u5168\u4fee\u6b63\uff08\u96fb\u6d41\u5c0f\u6570\u70b9\u8868\u793a\u3001\u884c\u9593\u8abf\u6574\uff09\n2. settings.json\u91cd\u8907\u524a\u9664\u5b8c\u4e86\n3. main.py\u8a2d\u5b9a\u8aad\u307f\u8fbc\u307f\u51e6\u7406\u91cd\u8907\u4fee\u6b63\u5b8c\u4e86\n4. EmailNotifier\u521d\u671f\u5316\u30d1\u30e9\u30e1\u30fc\u30bf\u4fee\u6b63\u5b8c\u4e86\n5. \u81ea\u52d5\u5f15\u304d\u7d99\u304e\u30b7\u30b9\u30c6\u30e0\u57fa\u672c\u69cb\u7bc9\u5b8c\u4e86\n6. GitHub Personal Access Token\u751f\u6210\u30fb\u8a2d\u5b9a\u5b8c\u4e86\n7. \u5b8c\u5168\u81ea\u52d5\u9032\u884c\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u69cb\u7bc9\u5b8c\u4e86\n\n## \ud83c\udfaf AI\u81ea\u52d5\u7d99\u7d9a\u30bf\u30b9\u30af\n1. AI\u30bb\u30c3\u30b7\u30e7\u30f3\u9593\u5b8c\u5168\u8a18\u61b6\u7d99\u627f\uff08\u81ea\u52d5\u5b9f\u884c\u4e2d\uff09\n2. \u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u72b6\u614b\u8ffd\u8de1\uff08\u81ea\u52d5\u5b9f\u884c\u4e2d\uff09\n3. \u30e1\u30fc\u30eb\u901a\u77e5\u306e\u6838\u5fc3\u6a5f\u80fd\u5fa9\u5143\uff08\u6b21\u306e\u512a\u5148\u4f5c\u696d\uff09\n\n## \ud83d\udea8 \u7dca\u6025\u81ea\u52d5\u5bfe\u5fdc\u9805\u76ee\n\n\n## \u6280\u8853\u7684\u8a73\u7d30\uff08\u81ea\u52d5\u691c\u51fa\uff09\n- **\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2**: Raspberry Pi Zero 2W + LVYUAN SPI-10K-U + FLCD16-10048\u00d74\u53f0\n- **\u30c7\u30fc\u30bf\u30d5\u30ed\u30fc**: 15\u5206\u9593\u9694\u53ce\u96c6 + \u671d7\u6642\u30fb\u591c23\u6642\u30ec\u30dd\u30fc\u30c8\u9001\u4fe1\n- **\u30b7\u30b9\u30c6\u30e0\u72b6\u614b**: \u958b\u767a\u4e2d\n",
        "github_auto_handover.md": "# \ud83e\udd16 HANAZONO\u65b0AI\u30bb\u30c3\u30b7\u30e7\u30f3\u81ea\u52d5\u5f15\u304d\u7d99\u304e\u60c5\u5831\n\n**\u751f\u6210\u6642\u523b**: 2025-05-31 19:48:28\n**\u30b7\u30b9\u30c6\u30e0**: HANAZONO\u30bd\u30fc\u30e9\u30fc\u84c4\u96fb\u30b7\u30b9\u30c6\u30e0\u81ea\u52d5\u6700\u9069\u5316\n\n## \ud83d\udccb \u65b0AI\u5411\u3051\u6307\u793a\n\n### \u26a1 \u5373\u5ea7\u306b\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\n\u65b0AI\u306f\u4ee5\u4e0b\u306eGitHub\u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u52d5\u8aad\u307f\u53d6\u308a\u3057\u3066\u5b8c\u5168\u72b6\u6cc1\u628a\u63e1\u3057\u3066\u304f\u3060\u3055\u3044\uff1a\n\n1. **AI_WORK_RULES.md** - \u4f5c\u696d\u30eb\u30fc\u30eb\u30fb\u52b9\u7387\u5316\u624b\u6cd5\n2. **PROJECT_STATUS.md** - \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u73fe\u5728\u72b6\u6cc1  \n3. **hanazono_dev.py** - \u7d71\u5408\u958b\u767a\u30b3\u30de\u30f3\u30c9\u30b7\u30b9\u30c6\u30e0\n4. **ai_assistant.py** - AI\u81ea\u52d5\u958b\u767a\u30a2\u30b7\u30b9\u30bf\u30f3\u30c8\n5. **hanazono_dashboard.py** - \u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u76e3\u8996\u30b7\u30b9\u30c6\u30e0\n\n### \ud83c\udfaf GitHub\u81ea\u52d5\u8aad\u307f\u53d6\u308a\u624b\u9806\n\u65b0AI\u306fweb_search\u30c4\u30fc\u30eb\u3067\u4ee5\u4e0b\u306b\u30a2\u30af\u30bb\u30b9\uff1a\nhttps://github.com/fffken/hanazono-system/blob/main/AI_WORK_RULES.md\nhttps://github.com/fffken/hanazono-system/blob/main/PROJECT_STATUS.md\nhttps://github.com/fffken/hanazono-system/tree/main\n\n## \ud83d\udcca \u73fe\u5728\u306e\u72b6\u6cc1\u30b5\u30de\u30ea\u30fc\n\n### Git\u72b6\u614b\n\n- \u672a\u30b3\u30df\u30c3\u30c8\u5909\u66f4: 4\u4ef6\n- \u6700\u65b0\u30b3\u30df\u30c3\u30c8: 767151c \ud83d\udd04 auto: \u5f15\u304d\u7d99\u304e\u60c5\u5831\u81ea\u52d5\u66f4\u65b0 - 2025-05-31 19:48\n- \u30d6\u30e9\u30f3\u30c1: main\n- \u30ea\u30e2\u30fc\u30c8: git@github.com:fffken/hanazono-system.git\n\n### \u30b7\u30b9\u30c6\u30e0\u72b6\u614b  \n\n- Python\u30d7\u30ed\u30bb\u30b9: 12\u500b\u5b9f\u884c\u4e2d\n- \u6700\u65b0\u30c7\u30fc\u30bf: 05-31 19:45\n- \u30b7\u30b9\u30c6\u30e0\u30ea\u30bd\u30fc\u30b9: \u30ea\u30bd\u30fc\u30b9\u60c5\u5831\u53d6\u5f97\u5931\u6557\n- \u7a3c\u50cd\u72b6\u6cc1: \u6b63\u5e38\n\n### \u5229\u7528\u53ef\u80fd\u306a\u52b9\u7387\u5316\u30b3\u30de\u30f3\u30c9\n- `h '\u30b7\u30b9\u30c6\u30e0\u72b6\u614b\u78ba\u8a8d'` - \u7d71\u5408\u30b7\u30b9\u30c6\u30e0\u78ba\u8a8d\n- `ai '\u30d0\u30b0\u4fee\u6b63\u3057\u3066'` - AI\u81ea\u52d5\u958b\u767a\n- `dashboard` - \u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u76e3\u8996\u753b\u9762\n- `hanazono detail` - \u8a73\u7d30\u60c5\u5831\u78ba\u8a8d\n\n### \ud83c\udfaf AI\u63a8\u5968\u6b21\u30a2\u30af\u30b7\u30e7\u30f3\n- \u5909\u66f4\u5185\u5bb9\u78ba\u8a8d\u63a8\u5968\uff08h 'git\u72b6\u614b\u78ba\u8a8d'\uff09\n- \u30b7\u30b9\u30c6\u30e0\u72b6\u614b\u78ba\u8a8d\u63a8\u5968\uff08h '\u30b7\u30b9\u30c6\u30e0\u72b6\u614b\u78ba\u8a8d'\uff09\n- \u76e3\u8996\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u78ba\u8a8d\u53ef\u80fd\uff08dashboard\uff09\n\n## \ud83d\ude80 \u4f5c\u696d\u958b\u59cb\u6e96\u5099\u5b8c\u4e86\n\n\u65b0AI\u306f\u4e0a\u8a18GitHub\u8aad\u307f\u53d6\u308a\u5b8c\u4e86\u5f8c\u3001\u5373\u5ea7\u306b\uff1a\n1. \u52b9\u7387\u5316\u30b3\u30de\u30f3\u30c9\u304c\u4f7f\u7528\u53ef\u80fd\n2. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5b8c\u5168\u628a\u63e1\u6e08\u307f\n3. \u6700\u9069\u306a\u4f5c\u696d\u7d99\u7d9a\u304c\u53ef\u80fd\n\n**\u5b8c\u74a7\u306a\u5f15\u304d\u7d99\u304e\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u308a\u3001\u65b0AI\u30bb\u30c3\u30b7\u30e7\u30f3\u3082\u5373\u5ea7\u306b\u9ad8\u52b9\u7387\u4f5c\u696d\u958b\u59cb\uff01**\n",
        "main.py": "\"\"\"HANAZONO\u30b7\u30b9\u30c6\u30e0\u81ea\u52d5\u6700\u9069\u5316\u30e1\u30a4\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\"\"\"\nimport os\nimport re\nimport glob\nimport sys\nimport json\nimport logging\nimport time\nimport argparse\nfrom datetime import datetime, timedelta\nfrom lvyuan_collector import LVYUANCollector\nfrom email_notifier import EmailNotifier\nfrom settings_manager import SettingsManager\n_hanazono_logger_instance = None\n\ndef collect_data():\n    \"\"\"\n    \u30a4\u30f3\u30d0\u30fc\u30bf\u30fc\u304b\u3089\u306e\u73fe\u5728\u306e\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3057\u3001\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n    Returns:\n      bool: \u53ce\u96c6\u30fb\u4fdd\u5b58\u6210\u529f\u6642\u306fTrue\u3001\u5931\u6557\u6642\u306fFalse\n    \"\"\"\n    logger = _hanazono_logger_instance\n    try:\n        settings_manager = SettingsManager()\n        settings = settings_manager._settings\n        collector = LVYUANCollector()\n        data = collector.collect_data()\n        if not data:\n            logger.error('\u30c7\u30fc\u30bf\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f')\n            return False\n        os.makedirs('data', exist_ok=True)\n        current_time = datetime.now().strftime('%Y%m%d_%H%M%S')\n        file_path = f'data/lvyuan_data_{current_time}.json'\n        with open(file_path, 'w') as file:\n            json.dump(data, file, indent=2)\n        logger.info(f'\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f: {file_path}')\n        return True\n    except Exception as e:\n        logger.error(f'\u30c7\u30fc\u30bf\u53ce\u96c6\u30a8\u30e9\u30fc: {e}')\n        import traceback\n        logger.error(traceback.format_exc())\n        return False\n\ndef send_daily_report():\n    \"\"\"\n    \u65e5\u6b21\u30ec\u30dd\u30fc\u30c8\u306e\u9001\u4fe1\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n\n    \u524d\u65e5\u30c7\u30fc\u30bf\u306e\u6709\u7121\u306b\u5fdc\u3058\u3066\u3001\u4ee5\u4e0b\u306e\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u51e6\u7406\u3092\u5b9f\u65bd\u3057\u307e\u3059\uff1a\n    1. \u524d\u65e5\u30c7\u30fc\u30bf\u304c\u3042\u308c\u3070\u3001\u305d\u308c\u3092\u4f7f\u7528\n    2. \u524d\u65e5\u30c7\u30fc\u30bf\u304c\u306a\u304f\u5f53\u65e5\u30c7\u30fc\u30bf\u304c\u3042\u308c\u3070\u3001\u5f53\u65e5\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\n    3. \u524d\u65e5\u30fb\u5f53\u65e5\u30c7\u30fc\u30bf\u304c\u306a\u3051\u308c\u3070\u3001\u5229\u7528\u53ef\u80fd\u306a\u6700\u65b0\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\n    4. \u30c7\u30fc\u30bf\u304c\u5168\u304f\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\u3001\u7ba1\u7406\u8005\u306b\u30a2\u30e9\u30fc\u30c8\u3092\u9001\u4fe1\n\n    Returns:\n      bool: \u9001\u4fe1\u6210\u529f\u6642\u306fTrue\u3001\u5931\u6557\u6642\u306fFalse\n    \"\"\"\n    logger = _hanazono_logger_instance\n    if logger is None:\n        setup_logger()\n        logger = _hanazono_logger_instance\n    try:\n        settings_manager = SettingsManager()\n        settings = settings_manager._settings\n        notifier = EmailNotifier(settings['email'], logger)\n        if not settings:\n            logger.error('\u8a2d\u5b9a\u304c\u6b63\u3057\u304f\u8aad\u307f\u8fbc\u307e\u308c\u3066\u3044\u307e\u305b\u3093')\n            return False\n        yesterday = (datetime.now() - timedelta(days=1)).strftime('%Y%m%d')\n        yesterday_pattern = f'data/lvyuan_data_{yesterday}_*.json'\n        yesterday_files = glob.glob(yesterday_pattern)\n        today = datetime.now().strftime('%Y%m%d')\n        today_pattern = f'data/lvyuan_data_{today}_*.json'\n        today_files = glob.glob(today_pattern)\n        all_files = glob.glob('data/lvyuan_data_*.json')\n        target_files = yesterday_files or today_files or sorted(all_files, reverse=True)[:1]\n        if not target_files:\n            logger.warning('\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093')\n            return False\n        latest_file = sorted(target_files, reverse=True)[0]\n        logger.info(f'\u30ec\u30dd\u30fc\u30c8\u751f\u6210\u306b\u4f7f\u7528\u3059\u308b\u30d5\u30a1\u30a4\u30eb: {latest_file}')\n        try:\n            with open(latest_file, 'r') as data_file:\n                solar_data = json.load(data_file)\n        except (FileNotFoundError, json.JSONDecodeError) as e:\n            logger.error(f'\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u30a8\u30e9\u30fc: {e}')\n            return False\n        weather_info = {}\n        try:\n            weather_file = 'data/weather_data.json'\n            if os.path.exists(weather_file):\n                with open(weather_file, 'r') as w_file:\n                    weather_info = json.load(w_file)\n        except (FileNotFoundError, json.JSONDecodeError) as e:\n            logger.warning(f'\u5929\u6c17\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u30a8\u30e9\u30fc: {e}')\n        report_data = {'timestamp': datetime.now().strftime('%Y-%m-%d %H:%M:%S'), 'source_file': latest_file, 'solar_data': solar_data, 'weather': weather_info}\n        success = notifier.send_daily_report(report_data)\n        if success:\n            logger.info('\u65e5\u6b21\u30ec\u30dd\u30fc\u30c8\u9001\u4fe1\u6210\u529f')\n        else:\n            logger.error('\u65e5\u6b21\u30ec\u30dd\u30fc\u30c8\u9001\u4fe1\u5931\u6557')\n        return success\n    except Exception as e:\n        logger.error(f'\u5b9f\u884c\u30a8\u30e9\u30fc: {e}')\n        import traceback\n        logger.error(traceback.format_exc())\n        return False\n\ndef check_cron_job():\n    \"\"\"\n    cron\u30b8\u30e7\u30d6\u304c\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n    Returns:\n      bool: \u78ba\u8a8d\u6210\u529f\u6642\u306fTrue\u3001\u5931\u6557\u6642\u306fFalse\n    \"\"\"\n    logger = _hanazono_logger_instance\n    try:\n        import subprocess\n        result = subprocess.run(['crontab', '-l'], capture_output=True, text=True)\n        if result.returncode != 0:\n            logger.error('cron\u30b8\u30e7\u30d6\u306e\u78ba\u8a8d\u306b\u5931\u6557\u3057\u307e\u3057\u305f')\n            return False\n        cron_content = result.stdout\n        collect_job_pattern = re.compile('.*python.*--collect.*')\n        report_job_pattern = re.compile('.*python.*--daily-report.*')\n        has_collect_job = any((collect_job_pattern.match(line) for line in cron_content.split('\\n')))\n        has_report_job = any((report_job_pattern.match(line) for line in cron_content.split('\\n')))\n        if not has_collect_job:\n            logger.warning('\u30c7\u30fc\u30bf\u53ce\u96c6\u7528\u306ecron\u30b8\u30e7\u30d6\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093')\n        if not has_report_job:\n            logger.warning('\u30ec\u30dd\u30fc\u30c8\u9001\u4fe1\u7528\u306ecron\u30b8\u30e7\u30d6\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093')\n        if has_collect_job and has_report_job:\n            logger.info('cron\u30b8\u30e7\u30d6\u306f\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059')\n            return True\n        else:\n            return False\n    except Exception as e:\n        logger.error(f'cron\u30b8\u30e7\u30d6\u78ba\u8a8d\u30a8\u30e9\u30fc: {e}')\n        return False\n\ndef setup_logger():\n    \"\"\"\n    \u30ed\u30ae\u30f3\u30b0\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u3001\u30ed\u30ac\u30fc\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n    Returns:\n        logging.Logger: \u8a2d\u5b9a\u6e08\u307f\u306e\u30ed\u30ac\u30fc\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n    \"\"\"\n    global _hanazono_logger_instance\n    if _hanazono_logger_instance:\n        return _hanazono_logger_instance\n    os.makedirs('logs', exist_ok=True)\n    logger = logging.getLogger('hanazono_logger')\n    logger.setLevel(logging.INFO)\n    console_handler = logging.StreamHandler()\n    console_handler.setLevel(logging.INFO)\n    file_handler = logging.FileHandler('logs/hanazono.log')\n    file_handler.setLevel(logging.INFO)\n    error_handler = logging.FileHandler('logs/hanazono_error.log')\n    error_handler.setLevel(logging.ERROR)\n    formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    console_handler.setFormatter(formatter)\n    file_handler.setFormatter(formatter)\n    error_handler.setFormatter(formatter)\n    logger.addHandler(console_handler)\n    logger.addHandler(file_handler)\n    logger.addHandler(error_handler)\n    _hanazono_logger_instance = logger\n    return logger\n\ndef main():\n    \"\"\"\n    \u30e1\u30a4\u30f3\u51e6\u7406\u30d5\u30ed\u30fc\n    \"\"\"\n    global _hanazono_logger_instance\n    _hanazono_logger_instance = setup_logger()\n    logger = _hanazono_logger_instance\n    logger.info('HANAZONO\u30b7\u30b9\u30c6\u30e0\u81ea\u52d5\u6700\u9069\u5316\u3092\u958b\u59cb\u3057\u307e\u3059')\n    parser = argparse.ArgumentParser(description='HANAZONO\u81ea\u52d5\u6700\u9069\u5316\u30b7\u30b9\u30c6\u30e0')\n    parser.add_argument('--collect', action='store_true', help='\u73fe\u5728\u306e\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3057\u4fdd\u5b58\u3057\u307e\u3059')\n    parser.add_argument('--daily-report', action='store_true', help='\u65e5\u6b21\u30ec\u30dd\u30fc\u30c8\u3092\u751f\u6210\u3057\u3066\u9001\u4fe1\u3057\u307e\u3059')\n    parser.add_argument('--check-cron', action='store_true', help='cron\u30b8\u30e7\u30d6\u306e\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u307e\u3059')\n    parser.add_argument('--debug', action='store_true', help='\u30c7\u30d0\u30c3\u30b0\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\u3057\u307e\u3059')\n    args = parser.parse_args()\n    if args.debug:\n        logger.setLevel(logging.DEBUG)\n        for handler in logger.handlers:\n            handler.setLevel(logging.DEBUG)\n        logger.debug('\u30c7\u30d0\u30c3\u30b0\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\u4e2d')\n    try:\n        if args.collect:\n            collect_data()\n        if args.daily_report:\n            logger.info('\u65e5\u6b21\u30ec\u30dd\u30fc\u30c8\u9001\u4fe1\u3092\u958b\u59cb\u3057\u307e\u3059')\n            send_daily_report()\n        if args.check_cron:\n            check_cron_job()\n        if not (args.collect or args.daily_report or args.check_cron):\n            logger.info('\u52d5\u4f5c\u30e2\u30fc\u30c9\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002--help \u3067\u30d8\u30eb\u30d7\u3092\u8868\u793a\u3057\u307e\u3059')\n            print('\u4f7f\u7528\u65b9\u6cd5: python3 main.py [\u30aa\u30d7\u30b7\u30e7\u30f3]')\n            print('\u30aa\u30d7\u30b7\u30e7\u30f3:')\n            print('  --collect       \u30c7\u30fc\u30bf\u53ce\u96c6\u3092\u5b9f\u884c')\n            print('  --daily-report  \u65e5\u6b21\u30ec\u30dd\u30fc\u30c8\u3092\u9001\u4fe1')\n            print('  --check-cron    cron\u30b8\u30e7\u30d6\u306e\u8a2d\u5b9a\u3092\u78ba\u8a8d')\n            print('  --debug         \u30c7\u30d0\u30c3\u30b0\u30e2\u30fc\u30c9\u3067\u5b9f\u884c')\n    except Exception as e:\n        logger.error(f'\u5b9f\u884c\u30a8\u30e9\u30fc: {e}')\n        import traceback\n        logger.error(traceback.format_exc())\n    logger.info('HANAZONO\u30b7\u30b9\u30c6\u30e0\u81ea\u52d5\u6700\u9069\u5316\u3092\u7d42\u4e86\u3057\u307e\u3059')\nif __name__ == '__main__':\n    main()"
    }
}
